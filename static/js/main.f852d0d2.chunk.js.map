{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","react_default","a","createElement","className","id","type","style","backgroundColor","theme","color","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","react_router_dom","to","title","aria-label","aria-current","about","onClick","changeTheme","role","htmlFor","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","btnClr","newText","toUpperCase","showAlert","toLowerCase","disabled","length","text1","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","defaultProps","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setTheme","_useState3","_useState4","setAlert","_useState5","_useState6","setBtnClr","body","components_Alert","react_router","exact","path","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f852d0d2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props){\r\n\r\n    // const [theme1, setTheme1] = useState({\r\n    //     color:'black',\r\n    //     backgroundColor:'white'\r\n    // })\r\n\r\n    // const [themeBtn, setThemeBtn] = useState(\"Enable Dark Mode\")\r\n\r\n    // const ChangeTheme = ()=> {\r\n    //     if(props.theme === 'info'){\r\n    //         setTheme1({\r\n    //             color:'black',\r\n    //             backgroundColor:'white'\r\n    //         })\r\n    //         // setThemeBtn(\"Enable Dark Mode\")\r\n    //     }\r\n    //     else{\r\n    //         setTheme1({\r\n    //             color:'white',\r\n    //             backgroundColor:'black'\r\n    //         })\r\n    //         // setThemeBtn(\"Enable Light Mode\")\r\n    //     }\r\n    // }\r\n\r\n    return(\r\n\r\n\r\n        <div className=\"container my-3\" >\r\n            <h3>About Us</h3>\r\n            <div className=\"accordion my-3\"  id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" type=\"button\" style={{backgroundColor:props.theme==='dark'?'#1B2631':'white', color:props.theme==='dark'?'white':'black'}} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        <strong>Authors</strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={{backgroundColor:props.theme==='dark'?'#1B2631':'white', color:props.theme==='dark'?'white':'black'}}>\r\n                        The Author is the one and only The<strong> Bablu OP!!!</strong>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" style={{backgroundColor:props.theme==='dark'?'#1B2631':'white', color:props.theme==='dark'?'white':'black'}} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    <strong>Contacts</strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={{backgroundColor:props.theme==='dark'?'#1B2631':'white', color:props.theme==='dark'?'white':'black'}}>\r\n                            Please don't contact me!! Still if you have to then you can call me on:<strong> +916204898163 </strong>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" style={{backgroundColor:props.theme==='dark'?'#1B2631':'white', color:props.theme==='dark'?'white':'black'}} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    <strong>More</strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={{backgroundColor:props.theme==='dark'?'#1B2631':'white', color:props.theme==='dark'?'white':'black'}}>\r\n                        There is nothing more left to know in this section.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <button onClick={ChangeTheme} type=\"button\" className='btn btn-outline-primary mx-1'><b>{themeBtn}</b></button> */}\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport propTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props)\r\n{\r\n  return (\r\n\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.theme} bg-${props.theme}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\"><b>{props.title}</b></Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">{props.about}</Link>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.theme==='info'?'dark':'light'} mx-2`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.changeTheme} role=\"Routes\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Theme</label>\r\n          </div>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\"  aria-label=\"Search\"/>\r\n            <button className={props.theme===\"info\"?\"btn btn-primary\":\"btn btn-secondary\"} type=\"submit\">Search</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title : propTypes.string.isRequired,      // isRequired: must pass the props from App.js\r\n  about: propTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {         // In case props are not passed from App.js\r\n  title : \"Default Title\",\r\n  about: \"Default About\"\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props){\r\n\r\n    const [text, setText] = useState(\"\"); // default value of text variable i.e. \"\"\r\n    // text = \"Some new Text\";  // Wrong way to update state variable\r\n    // setText(\"some new Text\");  // Correct way to update state variable\r\n    const ConvertToUppercase = ()=>{\r\n        if(text)\r\n        {\r\n            // console.log(\"Converted to Upper case!\")\r\n            let newText = text.toUpperCase();\r\n            setText(newText)\r\n            props.showAlert(\"success\",\"Converted to Uppercase!\")\r\n        }\r\n        else{\r\n            props.showAlert(\"warning\", \"Please enter the Text first!\")\r\n        }\r\n    }\r\n    const ConvertToLowercase = ()=>{\r\n        if(text)\r\n        {\r\n            // console.log(\"Converted to Lower case!\")\r\n            let newText = text.toLowerCase();\r\n            setText(newText)\r\n            props.showAlert(\"success\",\"Converted to Lowercase!\")\r\n        }\r\n        \r\n        else{\r\n            props.showAlert(\"warning\", \"Please enter the Text first!\")\r\n        }\r\n\r\n    }\r\n    const clearText = ()=>{\r\n        // console.log(\"Text cleared\")\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"success\",\"Text is cleared!\")\r\n\r\n    }\r\n    const Copy_Text = ()=> {\r\n        let text1 = document.getElementById(\"TextBox\");\r\n        text1.select();\r\n        navigator.clipboard.writeText(text1.value);\r\n        props.showAlert(\"success\",\"Text is copied to Clipboard!\")\r\n\r\n    }\r\n\r\n    const RemoveExtraSpace = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        // console.log(newText);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"success\",\"Extra Spaces are removed!\")\r\n\r\n    }\r\n\r\n\r\n    const updateText = (event)=>{\r\n        // console.log(\"Text updated\")\r\n        setText(event.target.value);\r\n    }\r\n\r\n    \r\n    return(\r\n        <>\r\n            <div className=\"container my-3\">\r\n                <div className=\"mb-3\">\r\n                <h5>{props.heading}</h5>\r\n                    <textarea className=\"form-control\" value = {text} placeholder=\"Enter your text here!\" style={{backgroundColor:props.theme==='dark'?'#1B2631':'white', color:props.theme==='dark'?'white':'black'}} onChange={updateText} id=\"TextBox\" rows=\"10\"></textarea>\r\n                </div>\r\n                <button className={`btn btn-${props.btnClr} mx-1 my-1`} onClick={ConvertToUppercase}>Convert to Uppercase</button>\r\n                <button className={`btn btn-${props.btnClr} mx-1 my-1`} onClick={ConvertToLowercase}>Convert to Lowercase</button>\r\n                <button disabled={text.length===0} className={`btn btn-${props.btnClr} mx-1 my-1`} onClick={Copy_Text}>Copy Text</button>\r\n                <button disabled={text.length===0} className={`btn btn-${props.btnClr} mx-1 my-1`} onClick={RemoveExtraSpace}>Remove Extra Space</button>\r\n                <button disabled={text.length===0} className={`btn btn-${props.btnClr} mx-1 my-1`} onClick={clearText}>Clear Text</button>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h5>Text Summary</h5>\r\n                <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words, {text.length} characters</p>\r\n                <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length}s to read the full text</p>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    \r\n    const capitalize = (word)=>{\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n      }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type}`} role=\"alert\">\r\n                {capitalize(props.alert.type)} : {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport React, {useState} from 'react'\n\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport {\n  HashRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n   const [theme, setTheme] = useState(\"info\");   // info is color code for light theme i.e. cyan color\n   const [alert, setAlert] = useState(null);\n   \n   const showAlert = (type, message)=>{\n     setAlert({\n       type: type,\n       msg: message\n     })\n     setTimeout(() => {\n       setAlert(null)\n     }, 1500);\n   }\n\n   const [btnClr, setBtnClr] = useState(\"info\");\n\n   const changeTheme = ()=>{\n    if(theme === \"info\")\n    {\n      setTheme(\"dark\");\n      document.body.style.backgroundColor = '#212F3C';\n      document.body.style.color = 'white';\n      setBtnClr(\"dark\");\n      // showAlert(\"success\", \"dark theme is enabled\");\n    }\n    else\n    {\n      setTheme(\"info\");\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      setBtnClr(\"info\");\n      // showAlert(\"success\", \"light theme is enabled\");\n    }\n  }\n\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"Text App\" about=\"About\" changeTheme={changeTheme} theme={theme} btnClr={btnClr} />\n        <Alert alert={alert}/>\n        <div className=\"container\">\n          <Routes>\n            <Route exact path=\"/about\" element={<About theme={theme}/>}/>\n            <Route path=\"/\" element={<TextForm heading=\"Please Enter the Text\" theme={theme} btnClr={btnClr} showAlert={showAlert}/>}/>\n            {/* <TextForm heading=\"Please Enter the Text\" theme={theme} btnClr={btnClr} showAlert={showAlert}/> */}\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}